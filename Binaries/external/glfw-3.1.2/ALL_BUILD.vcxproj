<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{B55992E4-C6E0-39E0-BEBA-71085F8BF9E8}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/p2vs/QuakeGit/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/p2vs/QuakeGit/Quake -BD:/p2vs/QuakeGit/Quake/Binaries --check-stamp-file D:/p2vs/QuakeGit/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/p2vs/QuakeGit/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/p2vs/QuakeGit/Quake -BD:/p2vs/QuakeGit/Quake/Binaries --check-stamp-file D:/p2vs/QuakeGit/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/p2vs/QuakeGit/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/p2vs/QuakeGit/Quake -BD:/p2vs/QuakeGit/Quake/Binaries --check-stamp-file D:/p2vs/QuakeGit/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/p2vs/QuakeGit/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/p2vs/QuakeGit/Quake -BD:/p2vs/QuakeGit/Quake/Binaries --check-stamp-file D:/p2vs/QuakeGit/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\p2vs\QuakeGit\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\ZERO_CHECK.vcxproj">
      <Project>{5DEFD063-A5E2-3253-ACE0-F42DAA18F750}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\examples\boing.vcxproj">
      <Project>{1BC011E0-F59D-3564-B980-AE7B1956F1DE}</Project>
      <Name>boing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\clipboard.vcxproj">
      <Project>{95830562-EBA4-3C03-AC94-EAE9E8BCFEE9}</Project>
      <Name>clipboard</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\cursor.vcxproj">
      <Project>{41A1B25D-9209-3266-B537-94F31EE069EA}</Project>
      <Name>cursor</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\empty.vcxproj">
      <Project>{61B10A6C-98BA-31D7-940C-D479C4FD8AB3}</Project>
      <Name>empty</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\events.vcxproj">
      <Project>{858640BD-1ED4-359F-B41F-27CAF9F391A3}</Project>
      <Name>events</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\gamma.vcxproj">
      <Project>{99645C8D-3584-3E88-9029-18C85A11077E}</Project>
      <Name>gamma</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\examples\gears.vcxproj">
      <Project>{6F9FFBA9-F1AC-3501-8B2B-9FB2F5263321}</Project>
      <Name>gears</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\src\glfw.vcxproj">
      <Project>{406479F5-3F14-395B-8D29-4B331AF87E50}</Project>
      <Name>glfw</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\glfwinfo.vcxproj">
      <Project>{2DF0CD5F-9341-3296-B365-C8BA198C5CD0}</Project>
      <Name>glfwinfo</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\examples\heightmap.vcxproj">
      <Project>{7DEAD926-B8A5-3264-8339-D8CE6D47DF4A}</Project>
      <Name>heightmap</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\iconify.vcxproj">
      <Project>{5ACC70E0-1B7E-3660-B000-14FF069EFD3A}</Project>
      <Name>iconify</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\joysticks.vcxproj">
      <Project>{4C8D696A-B798-3E1C-BB54-85A28C8717D1}</Project>
      <Name>joysticks</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\monitors.vcxproj">
      <Project>{E7190152-C5A9-3786-9BD4-7B76755CA4EF}</Project>
      <Name>monitors</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\msaa.vcxproj">
      <Project>{B4953CBD-BD6F-39A8-844F-1EFDE0B7AE3C}</Project>
      <Name>msaa</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\examples\particles.vcxproj">
      <Project>{2379E649-C680-3B7D-B70F-20A88E11493B}</Project>
      <Name>particles</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\reopen.vcxproj">
      <Project>{51AF173C-C4D2-3EEB-9617-0231414F7FA9}</Project>
      <Name>reopen</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\sharing.vcxproj">
      <Project>{296B204B-D19F-3E74-B0C1-9F379D82C837}</Project>
      <Name>sharing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\examples\simple.vcxproj">
      <Project>{F8EA1420-B8E8-3486-B355-C5C9E18E4B7B}</Project>
      <Name>simple</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\examples\splitview.vcxproj">
      <Project>{58DB9C9E-271E-3581-8A0D-365B815A0A48}</Project>
      <Name>splitview</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\tearing.vcxproj">
      <Project>{D896C139-8D5D-3654-AE11-01F4A4606EE1}</Project>
      <Name>tearing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\threads.vcxproj">
      <Project>{0FEF6CCE-8312-3F84-B1DB-6A07A6916CB6}</Project>
      <Name>threads</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\title.vcxproj">
      <Project>{B8A03E46-CCCC-31C8-863F-DDC7E864DAC3}</Project>
      <Name>title</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\examples\wave.vcxproj">
      <Project>{4D9ED662-BC99-3A15-9493-9047362310B7}</Project>
      <Name>wave</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\QuakeGit\Quake\Binaries\external\glfw-3.1.2\tests\windows.vcxproj">
      <Project>{FAFEB1A2-814D-35AA-9990-E9B9ABB5B415}</Project>
      <Name>windows</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>