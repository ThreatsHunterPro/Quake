<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{475EA6F4-AA97-3B46-A38A-AA4C55FF4747}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\p2vs\Quake\external\glfw-3.1.2\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/p2vs/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/p2vs/Quake -BD:/p2vs/Quake/Binaries --check-stamp-file D:/p2vs/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\p2vs\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\p2vs\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/p2vs/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/p2vs/Quake -BD:/p2vs/Quake/Binaries --check-stamp-file D:/p2vs/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\p2vs\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\p2vs\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/p2vs/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/p2vs/Quake -BD:/p2vs/Quake/Binaries --check-stamp-file D:/p2vs/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\p2vs\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\p2vs\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/p2vs/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/p2vs/Quake -BD:/p2vs/Quake/Binaries --check-stamp-file D:/p2vs/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\p2vs\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\p2vs\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\p2vs\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\ZERO_CHECK.vcxproj">
      <Project>{6388BD46-2429-321C-8946-E0CFE0C56207}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\examples\boing.vcxproj">
      <Project>{B896C1CB-A10A-32B8-BDB2-9B4A10B15E41}</Project>
      <Name>boing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\clipboard.vcxproj">
      <Project>{C740F382-F678-33FD-B57C-FCDD9AA27DE3}</Project>
      <Name>clipboard</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\cursor.vcxproj">
      <Project>{248545B6-8CC2-3699-9EFD-BFA42142F42E}</Project>
      <Name>cursor</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\empty.vcxproj">
      <Project>{976C45FA-C0E2-33FA-845D-4C48EC05CE5B}</Project>
      <Name>empty</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\events.vcxproj">
      <Project>{9179105E-279E-31AC-97D6-375B277CD88C}</Project>
      <Name>events</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\gamma.vcxproj">
      <Project>{69BBD4BF-65D9-3B94-B58E-6187AFD91773}</Project>
      <Name>gamma</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\examples\gears.vcxproj">
      <Project>{13588EAF-FE32-3EBF-BE98-CF0A6966441D}</Project>
      <Name>gears</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\src\glfw.vcxproj">
      <Project>{9E420009-8C1B-3167-9D33-09E12218581D}</Project>
      <Name>glfw</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\glfwinfo.vcxproj">
      <Project>{C5CFB6CD-6EE9-34F4-9379-FFE0940BFC64}</Project>
      <Name>glfwinfo</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\examples\heightmap.vcxproj">
      <Project>{9ECFBEF0-2772-30D4-BFBC-D3670EAEEBED}</Project>
      <Name>heightmap</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\iconify.vcxproj">
      <Project>{1FBF6FAC-C8D1-3E2B-BED4-F27B8D6AF9E9}</Project>
      <Name>iconify</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\joysticks.vcxproj">
      <Project>{E6CE2873-9E0A-3EDE-B399-DACBB43CE58F}</Project>
      <Name>joysticks</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\monitors.vcxproj">
      <Project>{09FC039B-D9D0-30F7-B144-56075F48EE84}</Project>
      <Name>monitors</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\msaa.vcxproj">
      <Project>{310BD5E1-BC2C-31C2-AD04-0AF222D78FE0}</Project>
      <Name>msaa</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\examples\particles.vcxproj">
      <Project>{4F2216B1-A552-34CC-9B8D-D6C6B32A728E}</Project>
      <Name>particles</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\reopen.vcxproj">
      <Project>{CB6A68CC-4FAA-30E4-9429-8F5ED2D2F5AF}</Project>
      <Name>reopen</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\sharing.vcxproj">
      <Project>{AE6AFAA3-FD07-3C49-9799-B0DD7A135689}</Project>
      <Name>sharing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\examples\simple.vcxproj">
      <Project>{13C05FE1-784B-3331-A607-89C90E450A2F}</Project>
      <Name>simple</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\examples\splitview.vcxproj">
      <Project>{E7124E21-F5C7-30FF-8F64-5C03BED9086B}</Project>
      <Name>splitview</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\tearing.vcxproj">
      <Project>{61AAD928-31FB-302A-A233-8C1BA826CD6A}</Project>
      <Name>tearing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\threads.vcxproj">
      <Project>{87FCAC58-4913-31F2-B318-FE594FCD2B00}</Project>
      <Name>threads</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\title.vcxproj">
      <Project>{4FCEE7B5-E981-3C48-893F-CF1C6E7821DB}</Project>
      <Name>title</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\examples\wave.vcxproj">
      <Project>{80593E73-A1B9-3F42-B27A-00F87258B1A8}</Project>
      <Name>wave</Name>
    </ProjectReference>
    <ProjectReference Include="D:\p2vs\Quake\Binaries\external\glfw-3.1.2\tests\windows.vcxproj">
      <Project>{FC0F23CF-B892-363B-BE61-ECA6F6459F49}</Project>
      <Name>windows</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>