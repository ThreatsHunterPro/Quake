<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{8B082B44-8F3A-3DDE-AF77-2A4DD7E4E131}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22000.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/repository/Quake/QuakeGH/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\CMake\cmake-3.29.0-windows-x86_64\bin\cmake.exe -SD:/repository/Quake/QuakeGH/Quake -BD:/repository/Quake/QuakeGH/Quake/Binaries --check-stamp-file D:/repository/Quake/QuakeGH/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckLibraryExists.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindOpenGL.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindPackageMessage.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindThreads.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/repository/Quake/QuakeGH/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\CMake\cmake-3.29.0-windows-x86_64\bin\cmake.exe -SD:/repository/Quake/QuakeGH/Quake -BD:/repository/Quake/QuakeGH/Quake/Binaries --check-stamp-file D:/repository/Quake/QuakeGH/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckLibraryExists.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindOpenGL.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindPackageMessage.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindThreads.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/repository/Quake/QuakeGH/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\CMake\cmake-3.29.0-windows-x86_64\bin\cmake.exe -SD:/repository/Quake/QuakeGH/Quake -BD:/repository/Quake/QuakeGH/Quake/Binaries --check-stamp-file D:/repository/Quake/QuakeGH/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckLibraryExists.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindOpenGL.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindPackageMessage.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindThreads.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/repository/Quake/QuakeGH/Quake/external/glfw-3.1.2/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\CMake\cmake-3.29.0-windows-x86_64\bin\cmake.exe -SD:/repository/Quake/QuakeGH/Quake -BD:/repository/Quake/QuakeGH/Quake/Binaries --check-stamp-file D:/repository/Quake/QuakeGH/Quake/Binaries/external/glfw-3.1.2/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\CheckLibraryExists.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindOpenGL.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindPackageMessage.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\FindThreads.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\cmake-3.29.0-windows-x86_64\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\cmake_uninstall.cmake.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw3.pc.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw3Config.cmake.in;D:\repository\Quake\QuakeGH\Quake\external\glfw-3.1.2\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\ZERO_CHECK.vcxproj">
      <Project>{FA4E6B93-31F6-33B9-AFCF-C21B1E40972C}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\examples\boing.vcxproj">
      <Project>{09D4FD82-D633-30B2-B5AC-9C7695B87C7C}</Project>
      <Name>boing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\clipboard.vcxproj">
      <Project>{56936F80-F866-389E-A9FE-ECCE0F1EC434}</Project>
      <Name>clipboard</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\cursor.vcxproj">
      <Project>{1535F983-D362-3408-8478-AC363AA12944}</Project>
      <Name>cursor</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\empty.vcxproj">
      <Project>{9F8C09C9-2557-3577-8D82-645CCFF6F0F2}</Project>
      <Name>empty</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\events.vcxproj">
      <Project>{72FC6C5F-111E-3709-BF7A-60B2375B135B}</Project>
      <Name>events</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\gamma.vcxproj">
      <Project>{DE8AFB12-E2A3-3BB5-8680-FB29789CFF32}</Project>
      <Name>gamma</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\examples\gears.vcxproj">
      <Project>{AF1F237A-3A2A-3D1F-A5A1-DDA31F537F5C}</Project>
      <Name>gears</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\src\glfw.vcxproj">
      <Project>{B5E2A152-C055-3B4B-A915-F2469E427325}</Project>
      <Name>glfw</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\glfwinfo.vcxproj">
      <Project>{DFBFDE55-487F-370D-8593-C8495C5DE02D}</Project>
      <Name>glfwinfo</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\examples\heightmap.vcxproj">
      <Project>{0A7123DE-965D-30BD-862D-70F78BCE3C89}</Project>
      <Name>heightmap</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\iconify.vcxproj">
      <Project>{D7DBB624-51B1-331A-86EC-7C34CB84B2F0}</Project>
      <Name>iconify</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\joysticks.vcxproj">
      <Project>{61B8CA78-1A5E-3AEF-B493-995590368216}</Project>
      <Name>joysticks</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\monitors.vcxproj">
      <Project>{02DA1135-44A3-312B-A578-A1FB74562A3F}</Project>
      <Name>monitors</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\msaa.vcxproj">
      <Project>{27F4FD99-A9F4-3A0F-9287-B2DF2639BBAA}</Project>
      <Name>msaa</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\examples\particles.vcxproj">
      <Project>{6D739633-4F4A-3A4A-A29A-56BD04F4D91C}</Project>
      <Name>particles</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\reopen.vcxproj">
      <Project>{5B1402CC-CDA4-30EE-A71F-8B7B6F5B3482}</Project>
      <Name>reopen</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\sharing.vcxproj">
      <Project>{B1853E14-A605-3E9D-9A5D-DEBC9E0495B5}</Project>
      <Name>sharing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\examples\simple.vcxproj">
      <Project>{77500A9F-E6FB-3361-ADE0-4F1856932B75}</Project>
      <Name>simple</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\examples\splitview.vcxproj">
      <Project>{22059500-8E4C-3735-BA9C-8AF00B5D8982}</Project>
      <Name>splitview</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\tearing.vcxproj">
      <Project>{55B59362-3B9A-3C84-BD24-FEFF074B198D}</Project>
      <Name>tearing</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\threads.vcxproj">
      <Project>{E4AA4691-A3F1-396C-B549-B0F4CD3D3A2A}</Project>
      <Name>threads</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\title.vcxproj">
      <Project>{F5B63E77-CF36-3ACF-9D27-E3FF1416FCC2}</Project>
      <Name>title</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\examples\wave.vcxproj">
      <Project>{7D25BF72-E9E7-3C61-9EF4-B9F1B7E7EAEF}</Project>
      <Name>wave</Name>
    </ProjectReference>
    <ProjectReference Include="D:\repository\Quake\QuakeGH\Quake\Binaries\external\glfw-3.1.2\tests\windows.vcxproj">
      <Project>{86EA8B03-A944-3B82-8D82-EFEE7C615818}</Project>
      <Name>windows</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>